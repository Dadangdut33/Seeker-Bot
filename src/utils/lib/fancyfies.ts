const punycode = require("punycode");

let map = {
	" ": " ",
	"‚Öã": "&",
	"%": ["%"],
	"Ôºê": ["0"],
	"Ôºë": ["1"],
	"Ôºí": ["2"],
	"Ôºì": ["3"],
	"Ôºî": ["4"],
	"Ôºï": ["5"],
	"Ôºñ": ["6"],
	"Ôºó": ["7"],
	"Ôºò": ["8"],
	"Ôºô": ["9"],
	"Ôºú": ["<"],
	"Ôºû": [">"],
	"„Äê": ["["],
	"„Äë": ["]"],
	"‚ú©": ["*"],
	"(": ["("],
	")": [")"],
	"ùì™": ["a", "A"],
	"ùí∑": ["b", "B"],
	"ùì¨": ["c", "C"],
	"ùíπ": ["d", "D"],
	"ùíÜ": ["e", "E"],
	"ùíª": ["f", "F"],
	"ùì∞": ["g", "G"],
	"ùíΩ": ["h", "H"],
	"ùíæ": ["i", "I"],
	"ùíø": ["j", "J"],
	"ùìÄ": ["k", "K"],
	"ùìÅ": ["l", "L"],
	"ùìÇ": ["m", "M"],
	"ùìÉ": ["n", "N"],
	"ùëú": ["o", "O"],
	"ùìÖ": ["p", "P"],
	"ùìÜ": ["q", "Q"],
	"ùìá": ["r", "R"],
	"ùìà": ["s", "S"],
	"ùìâ": ["t", "T"],
	"ùìä": ["u", "U"],
	"ùìã": ["v", "V"],
	"ùìå": ["w", "W"],
	"ùìç": ["x", "X"],
	"ùìé": ["y", "Y"],
	"ùìè": ["z", "Z"],
	";": [";"],
	":": [":"],
	"'": ["'"],
	'"': ['"'],
	"\\": ["\\"],
	"/": ["/"],
	"|": ["|"],
	"=": ["="],
	"+": ["+"],
	"-": ["-"],
	_: ["_"],
	"^": ["^"],
	"!": ["!"],
	"`": ["`"],
	".": ["."],
	",": [","],
};

function getKeyByValue(object: any, value: any) {
	let foundKey = "";
	Object.keys(object).find((key) => {
		for (let i in object[key]) {
			if (punycode.ucs2.decode(object[key][i]).toString().normalize() === value.toString().normalize()) {
				foundKey = key;
			}
		}
	});
	return foundKey;
}

export function fancy(characterString: string) {
	let fanciedString = "";
	let punycodeArray = punycode.ucs2.decode(characterString);
	for (let i = 0; i < punycodeArray.length; i++) {
		let key = getKeyByValue(map, punycodeArray[i]);

		// @ts-ignore
		if (key == isNaN) key = punycodeArray[i];

		fanciedString += key;
	}

	return fanciedString;
}
